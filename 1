# Step 1: Create the graph
graph = {
    '3': ['5', '7'],
    '5': ['4', '2'],
    '7': ['8'],
    '4': [],
    '2': ['8'],
    '8': []
}

# Step 2: Create the visited list and queue list
visited = []  # List to keep track of visited nodes.
queue = []    # Initialize a queue.

# Step 3: Define the BFS function
def bfs(visited, graph, node):
    visited.append(node)
    queue.append(node)

    while queue:          # Creating loop to visit each node
        m = queue.pop(0)   # Dequeue a node from queue
        print(m, end=" ")  # Print the visited node

        # Loop through the adjacent nodes and add to the queue if not visited
        for neighbour in graph[m]:
            if neighbour not in visited:
                visited.append(neighbour)
                queue.append(neighbour)

# Step 4: Driver code
print("Breadth-First Search starting from node 3:")
bfs(visited, graph, '3')
